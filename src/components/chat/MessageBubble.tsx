// src/components/chat/MessageBubble.tsx
"use client";
import { 
  Check, 
  CheckCheck, 
  Download, 
  Image, 
  File, 
  Video, 
  Mic2Icon,
  Reply,
  X
} from "lucide-react";
import type { Message } from "./types";
import { Button } from "@/components/ui/button";
import { useState } from "react";

interface MessageBubbleProps {
  msg: Message;
  onReply?: (message: Message) => void;
  isReplying?: boolean;
}

export function MessageBubble({ msg, onReply, isReplying }: MessageBubbleProps) {
  const isMe = msg.author === "me";
  const [imageError, setImageError] = useState(false);
  const [showReplyButton, setShowReplyButton] = useState(false);
  
  const handleDownload = (url: string, filename: string) => {
    const link = document.createElement('a');
    link.href = url;
    link.download = filename;
    link.click();
  };

  const handleReply = () => {
    if (onReply) {
      onReply(msg);
    }
  };

  // üí¨ WhatsApp Style: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞—é—Ç
  const renderReply = () => {
    if (!msg.replyTo) return null;

    // –í WhatsApp —Ü–∏—Ç–∞—Ç–∞ –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é –ø–æ–ª–æ—Å–∫—É –∏ –¥—Ä—É–≥–æ–π —Ñ–æ–Ω
    return (
      <div 
        className={`
          mb-1 p-2 rounded-lg border-l-4 max-w-full cursor-default
          ${isMe 
            ? 'bg-white/70 border-green-500 text-gray-700' // –°–≤–µ—Ç–ª–∞—è —Ü–∏—Ç–∞—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∑–µ–ª–µ–Ω–æ–≥–æ –ø—É–∑—ã—Ä—è
            : 'bg-gray-100/70 border-green-500 text-gray-700' // –°–≤–µ—Ç–ª–∞—è —Ü–∏—Ç–∞—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –±–µ–ª–æ–≥–æ –ø—É–∑—ã—Ä—è
          }
        `}
      >
        <div className="flex items-center gap-1 mb-1">
          <span className={`text-xs font-medium ${isMe ? 'text-green-600' : 'text-green-600'}`}>
            {msg.replyTo.author === "me" ? "–í—ã" : "–°–æ–æ–±—â–µ–Ω–∏–µ"}
          </span>
        </div>
        
        {/* –¢–µ–∫—Å—Ç –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ–¥–∏–∞ */}
        <div className="text-sm line-clamp-2"> {/* line-clamp –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—ã—Å–æ—Ç–µ */}
          {msg.replyTo.media ? (
            <div className="flex items-center gap-1 text-muted-foreground/80">
              {msg.replyTo.media.type === 'image' && <Image className="h-3 w-3" />}
              {msg.replyTo.media.type === 'video' && <Video className="h-3 w-3" />}
              {msg.replyTo.media.type === 'audio' && <Mic2Icon className="h-3 w-3" />}
              {msg.replyTo.media.type === 'document' && <File className="h-3 w-3" />}
              <span className="truncate">
                {msg.replyTo.media.name || 
                 (msg.replyTo.media.type === 'image' ? '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' :
                  msg.replyTo.media.type === 'video' ? '–í–∏–¥–µ–æ' :
                  msg.replyTo.media.type === 'audio' ? '–ê—É–¥–∏–æ' : '–î–æ–∫—É–º–µ–Ω—Ç')}
              </span>
            </div>
          ) : (
            <div className="truncate text-foreground/80">
              {msg.replyTo.text}
            </div>
          )}
        </div>
      </div>
    );
  };

  // ... (–§—É–Ω–∫—Ü–∏–∏ getFileTypeFromMessage –∏ getDisplayFileName –æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

  const getFileTypeFromMessage = (msg: Message): string => {
    if (msg.media?.type) return msg.media.type;
    if (msg.media?.mime) {
      if (msg.media.mime.startsWith('image/')) return 'image';
      if (msg.media.mime.startsWith('video/')) return 'video';
      if (msg.media.mime.startsWith('audio/')) return 'audio';
    }
    
    const fileName = msg.media?.name || msg.media?.url || '';
    const extension = fileName.split('.').pop()?.toLowerCase();
    
    const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp', 'svg'];
    const videoExtensions = ['mp4', 'avi', 'mov', 'wmv', 'flv', 'webm', 'mkv'];
    const audioExtensions = ['mp3', 'wav', 'ogg', 'aac', 'flac', 'm4a'];
    
    if (imageExtensions.includes(extension || '')) return 'image';
    if (videoExtensions.includes(extension || '')) return 'video';
    if (audioExtensions.includes(extension || '')) return 'audio';
    
    return 'document';
  };

  const getDisplayFileName = (): string => {
    if (msg.media?.name && msg.media.name !== msg.media.url) {
      return msg.media.name;
    }
    
    const fileName = msg.media?.url?.split('/').pop() || '';
    const fileType = getFileTypeFromMessage(msg);
    
    if (fileName.match(/^[a-f0-9-]+\.\w+$/i)) {
      const extension = fileName.split('.').pop()?.toUpperCase();
      switch (fileType) {
        case 'image': return `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.${extension}`;
        case 'video': return `–í–∏–¥–µ–æ.${extension}`;
        case 'audio': return `–ê—É–¥–∏–æ.${extension}`;
        default: return `–§–∞–π–ª.${extension}`;
      }
    }
    
    return fileName || '–§–∞–π–ª';
  };
  
  // üí¨ WhatsApp Style: –£–ª—É—á—à–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–µ–¥–∏–∞
  const renderMedia = () => {
    if (!msg.media) return null;

    const mediaType = getFileTypeFromMessage(msg);
    const displayFileName = getDisplayFileName();
    
    // –í WhatsApp –º–µ–¥–∏–∞ –æ–±—ã—á–Ω–æ –Ω–µ –∏–º–µ–µ—Ç —Ç–∞–∫–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞, –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
    // –∞ —Å–∞–º–æ –º–µ–¥–∏–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É "–ø—É–∑—ã—Ä—è" (—Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ –æ—Ç—Å—Ç—É–ø–∞–º–∏).

    switch (mediaType) {
      case 'image':
        return (
          // –£–±–∏—Ä–∞–µ–º mb-2, —á—Ç–æ–±—ã –æ–Ω–æ —Å–ª–∏–≤–∞–ª–æ—Å—å —Å —Ç–µ–∫—Å—Ç–æ–º, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
          <div className="rounded-xl overflow-hidden max-w-[280px] relative"> 
            {!imageError ? (
              <img 
                src={msg.media.url} 
                alt={displayFileName}
                className="w-full h-auto object-cover max-h-[300px] cursor-pointer"
                onError={() => setImageError(true)}
                loading="lazy"
                onClick={() => window.open(msg.media!.url, '_blank')}
              />
            ) : (
              // ... (–û—Å—Ç–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –Ω–æ —É–±–µ—Ä–∏—Ç–µ mb-2)
              <div className="flex flex-col items-center justify-center p-4 bg-muted text-muted-foreground rounded-lg">
                <Image className="h-8 w-8 mb-2" />
                <div className="text-sm text-center">
                  <div className="font-medium">{displayFileName}</div>
                  <div className="text-xs mt-1">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</div>
                </div>
                <Button 
                  variant="outline" 
                  size="sm" 
                  className="mt-2"
                  onClick={() => handleDownload(msg.media!.url, displayFileName)}
                >
                  <Download className="h-3 w-3 mr-1" />
                  –°–∫–∞—á–∞—Ç—å
                </Button>
              </div>
            )}
            {/* –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞, —Ç–æ —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –Ω–∏–∂–µ, 
                –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤—Ä–µ–º—è/—Å—Ç–∞—Ç—É—Å –±—É–¥–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–µ. 
                –ï—Å–ª–∏ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞, —Ç–æ –≤—Ä–µ–º—è/—Å—Ç–∞—Ç—É—Å –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ, –Ω–æ —ç—Ç–æ —Å–ª–æ–∂–Ω–µ–µ.
                –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –≤—Ä–µ–º—è –≤–Ω–∏–∑—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –Ω–æ —É–±–µ—Ä–µ–º –ø—Ä–∞–≤—ã–π –æ—Ç—Å—Ç—É–ø –¥–ª—è –º–µ–¥–∏–∞ */}
          </div>
        );
      
      case 'video':
        return (
          <div className="rounded-xl overflow-hidden max-w-[280px] relative">
            <video 
              controls 
              className="w-full h-auto max-h-[300px] rounded-lg"
              preload="metadata"
            >
              <source src={msg.media.url} type={msg.media.mime} />
              –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
            </video>
          </div>
        );
      
      case 'audio':
        // –ê—É–¥–∏–æ –≤ WhatsApp –∏–º–µ–µ—Ç —Å–≤–æ–π –æ—Å–æ–±—ã–π –¥–∏–∑–∞–π–Ω, –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã:
        return (
          <div className="mb-2 w-full max-w-[280px] pr-10"> {/* pr-10 –¥–ª—è –º–µ—Å—Ç–∞ –ø–æ–¥ –≤—Ä–µ–º—è/—Å—Ç–∞—Ç—É—Å */}
            <div className="flex items-center gap-3">
              {/* –ê—É–¥–∏–æ-–ø–ª–µ–µ—Ä, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ WhatsApp */}
              <audio controls className="flex-1 w-full h-9">
                <source src={msg.media.url} type={msg.media.mime} />
                –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
              </audio>
              {/* –í WhatsApp –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–≤–∞—Ç–∞—Ä–∫–∞/–∏–∫–æ–Ω–∫–∞ */}
            </div>
          </div>
        );
      
      case 'document':
      default:
        // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ WhatsApp
        return (
          <div className="flex items-center gap-3 p-2 rounded-lg max-w-[280px] pr-10">
            <div className={`p-2 rounded-full ${isMe ? 'bg-white/90' : 'bg-green-100'}`}>
                <File className="h-5 w-5 text-green-600 flex-shrink-0" />
            </div>
            <div className="flex-1 min-w-0">
              <div className="font-medium text-sm truncate">
                {displayFileName}
              </div>
              {msg.media.size && (
                <div className={`text-xs ${isMe ? 'text-white/80' : 'text-gray-500'}`}>
                  {(msg.media.size / 1024 / 1024).toFixed(2)} MB
                </div>
              )}
            </div>
            <Button
              variant="ghost"
              size="icon"
              onClick={() => handleDownload(msg.media!.url, displayFileName)}
              className={`flex-shrink-0 ${isMe ? 'text-white/90 hover:text-white/70' : 'text-green-600 hover:text-green-700'}`}
              title="–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª"
            >
              <Download className="h-4 w-4" />
            </Button>
          </div>
        );
    }
  };

  // üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–º
  const isMediaOnly = msg.media && !msg.text; // –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∏–ª—è

  return (
    <div 
      className={`flex ${isMe ? "justify-end" : "justify-start"} mb-3`}
      onMouseEnter={() => setShowReplyButton(true)}
      onMouseLeave={() => setShowReplyButton(false)}
    >
      <div
        className={[
          "relative max-w-[85%] px-3 pt-2 pb-1 shadow-sm group min-w-[80px]", // pb-1 –¥–ª—è –º–µ—Å—Ç–∞ –ø–æ–¥ –≤—Ä–µ–º—è
          // üí¨ WhatsApp Style: –ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏—è –∏ —Ü–≤–µ—Ç–∞
          isMe
            ? "bg-whatsapp-green  rounded-xl rounded-br-none bg-green-400 text-white" // –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π, –æ—Å—Ç—Ä—ã–π —É–≥–æ–ª –≤–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞
            : "bg-white text-gray-900 rounded-xl rounded-bl-none border border-gray-100", // –ë–µ–ª—ã–π, –æ—Å—Ç—Ä—ã–π —É–≥–æ–ª –≤–Ω–∏–∑—É —Å–ª–µ–≤–∞
        ].join(" ")}
      >
        {/* üí¨ WhatsApp Style: –ö–Ω–æ–ø–∫–∞ –æ—Ç–≤–µ—Ç–∞ (—Å–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ) */}
        {onReply && showReplyButton && (
          <Button
            variant="ghost"
            size="icon"
            className={`
              absolute z-10 h-7 w-7 opacity-0 group-hover:opacity-100 transition-opacity
              ${isMe 
                ? '-left-8 bg-transparent hover:bg-gray-100/50 text-gray-500' // –°–ª–µ–≤–∞ –æ—Ç –∑–µ–ª–µ–Ω–æ–≥–æ –ø—É–∑—ã—Ä—è
                : '-right-8 bg-transparent hover:bg-gray-100/50 text-gray-500' // –°–ø—Ä–∞–≤–∞ –æ—Ç –±–µ–ª–æ–≥–æ –ø—É–∑—ã—Ä—è
              }
            `}
            onClick={handleReply}
            title="–û—Ç–≤–µ—Ç–∏—Ç—å"
          >
            <Reply className="h-4 w-4" />
          </Button>
        )}

        {/* üîπ –°–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞–µ–º */}
        {renderReply()}
        
        {/* üîπ –ú–µ–¥–∏–∞ (—Ä–µ–Ω–¥–µ—Ä–∏–º –¥–æ —Ç–µ–∫—Å—Ç–∞) */}
        {renderMedia()}
        
        {/* üîπ –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è */}
        {msg.text && (
          // –£–±–∏—Ä–∞–µ–º pr-12, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—É—Å—Ç–æ–≥–æ –º–µ—Å—Ç–∞
          <div className="whitespace-pre-wrap break-words min-w-full text-base"> 
            {msg.text}
          </div>
        )}
        
        {/* üí¨ WhatsApp Style: –í—Ä–µ–º—è –∏ —Å—Ç–∞—Ç—É—Å (–≤–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞) */}
        <div
          className={`
            flex items-center gap-1 text-[11px] mt-1 whitespace-nowrap justify-end 
            ${isMe ? "text-gray-500" : "text-gray-500"}
          `}
        >
          {/* –ü—É—Å—Ç–æ–π div –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –º–µ–¥–∏–∞, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –ø—É—Å—Ç */}
          {(!msg.text && !msg.media) && <div className="h-4"></div>} 
          
          <span className="leading-none">{msg.time}</span>
          {isMe &&
            (msg.status === "read" ? (
              <CheckCheck className="h-3 w-3 text-blue-500" /> // –°–∏–Ω–∏–µ –≥–∞–ª–æ—á–∫–∏
            ) : msg.status === "delivered" ? (
              <CheckCheck className="h-3 w-3 text-gray-400" /> // –°–µ—Ä—ã–µ –¥–≤–æ–π–Ω—ã–µ –≥–∞–ª–æ—á–∫–∏
            ) : msg.status === "failed" ? (
              <span className="text-red-500 leading-none">‚ö†Ô∏è</span>
            ) : (
              <Check className="h-3 w-3 text-gray-400" /> // –°–µ—Ä–∞—è –æ–¥–∏–Ω–∞—Ä–Ω–∞—è –≥–∞–ª–æ—á–∫–∞
            ))}
        </div>
      </div>
    </div>
  );
}